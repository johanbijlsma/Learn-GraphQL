type Query {
	info: String!
	feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
}

type Feed {
	links: [Link!]!
	count: Int!
}

type Mutation {
	post(url: String!, description: String!): Link!
	signup(email: String!, password: String!, name: String!): AuthPayLoad
	login(email: String!, password: String!): AuthPayLoad
}

type Link {
	id: ID!
	description: String!
	url: String!
	postedBy: User
}

type AuthPayLoad {
	token: String
	user: User
}

type User {
	id: ID!
	name: String!
	email: String!
	links: [Link!]!
}

enum LinkOrderByInput {
	description_ASC
	description_DESC
	url_ASC
	url_DESC
	createdAt_ASC
	createdAt_DESC
}
